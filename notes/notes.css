/* 
Scaling Images and Videos
______________________________

This is a very common design pattern used to scale images and videos proportionally.
*/

.container {
  width: 50%;
  height: 200px;
  /* any content that passes over container is hidden */
  overflow: hidden;
}

.container img {
  /* images scale with the width of the container. */
  max-width: 100%;

  /* height scales proportionally with the width. */
  height: auto;

  /* display images as block level elements (rather than inline-block, their default state). This will prevent images from attempting to align with other content on the page (like text), which can add unintended margin to the images. */
  display: block;
}

/* 
Scaling Background Images
______________________________
*/

body {
  background-image: url('#'); /* url for background image '#' is a placeholder */
  background-repeat: no-repeat; /* don't repeat background, this is on by default */
  background-position: center; /* center image */
  background-size: cover; /* image covers entire background of element */
}

/* 
MEDIA QUERIES - Media Queries
_______________________________
*/

/* 
@media — This keyword begins a media query rule and instructs the CSS compiler on how to parse the rest of the rule.

only screen — Indicates what types of devices should use this rule. Screen is the media type always used for displaying content, no matter the type of device. The only keyword is added to indicate that this rule only applies to one media type (screen).

(max-width : 480px) — This part of the rule is called a media feature, and instructs the CSS compiler to apply the CSS styles to devices with a width of 480 pixels or smaller. Media features are the conditions that must be met in order to render the CSS within a media query.

inside the brackets is the rule that should be applied
*/

@media only screen and (max-width: 480px) {
  body {
    font-size: 12px;
  }
}

/* 
MEDIA QUERIES - Range
_______________________________
*/

/* By using multiple widths and heights, a range can be set for a media query. */
/* ruleset for 320px - 480px */
@media only screen and (min-width: 320px) and (max-width: 480px) {
}

/* 
MEDIA QUERIES - Dots Per Inch (DPI)
_______________________________
*/

/* These media features accept a resolution value in either dots per inch (dpi) or dots per centimeter (dpc). */
@media only screen and (min-resolution: 300dpi) {
  /* CSS for high resolution screens */
}

/* 
MEDIA QUERIES - And Operator
_______________________________
*/

/* By placing the and operator between the two media features, 
the browser will require both media features to be true before 
it renders the CSS within the media query. The and operator can be used to 
chain as many media features as necessary. */
@media only screen and (max-width: 480px) and (min-resolution: 300dpi) {
  /* CSS ruleset */
}

/* 
MEDIA QUERIES - Comma Separated List
 */

/* In the example above, we used a comma (,) to separate multiple rules. The example above requires only one of the media features to be true for its CSS to apply. */
@media only screen and (min-width: 480px), (orientation: landscape) {
  /* CSS ruleset */
}

/* 
MEDIA QUERIES Breakpoints
*/

/* 
The points at which media queries are set are called breakpoints. Breakpoints are the screen sizes at which your web page does not appear properly. For example, if we want to target tablets that are in landscape orientation, we can create the following breakpoint:
*/

@media only screen and (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {
    /* CSS ruleset */
}

/* 
The dimensions at which the layout breaks or looks odd become your media query breakpoints.

By observing the dimensions at which a website naturally breaks, you can set media query breakpoints that create the best possible user experience on a project by project basis, rather than forcing every project to fit a certain screen size. Different projects have different needs, and creating a responsive design should be no different.

Use this as a reference of screen widths to test your website to make certain it looks great across a variety of devices.
    screen-sizes.png
*/
